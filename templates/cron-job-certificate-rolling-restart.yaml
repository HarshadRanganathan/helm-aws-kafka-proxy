{{- $kafkaProxyCron := (add1 .Values.kafkaProxyCron) | int }}
{{- $root := . }}
{{- range $i := untilStep 1 ($kafkaProxyCron) 1 }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  annotations:
  labels:
    chart: {{ $root.Chart.Name }}-{{ $root.Chart.Version }}
    heritage: {{ $root.Release.Service }}
    release: {{ $root.Release.Name }}
    app: {{ template "fullname" $root }}-{{ $i }}
    clustertype: {{ template "fullname" $root }}    
  name: {{ $root.Release.Name }}-{{ $i }}
  namespace: {{ $root.Values.namespace }}
spec:
  concurrencyPolicy: Forbid
  schedule: '0 23 * * *' # cron spec of time, here, 8 o'clock
  jobTemplate:
    spec:
      backoffLimit: 2 # this has very low chance of failing, as all this does
                      # is prompt kubernetes to schedule new replica set for
                      # the deployment
      activeDeadlineSeconds: 600 # timeout, makes most sense with 
                                 # "waiting for rollout" variant specified below
      template:
        spec:
          volumes:
            - name: kafka-wildcard-cert
              secret:
               defaultMode: 420
               secretName: {{ $root.Values.certificate.name }}
          serviceAccountName: kafka-proxy-deployment-restart
          restartPolicy: Never
          containers:
            - name: kubectl
              image: bitnami/kubectl
              command:
              - bash
              - -c
              - >-
                date=$(openssl x509 -in /opt/tls/tls.crt -enddate -noout | sed "s/.*=\(.*\)/\1/") &&
                echo "$date" &&
                date_s=$(date -d "${date}" +%s) &&
                now_s=$(date -d now +%s) &&
                date_diff=$(( (date_s - now_s) / 86400 )) &&
                if [[ $date_diff == 7 ]] ; then echo "{{ $root.Values.certificate.name }} will be expired in $date_diff ";aws sns publish --topic-arn {{ $root.Values.sns_topic }} --message "{{ $root.Values.certificate.name }} will be expired in $date_diff " --subject "Kafka proxy certificate will expire in $date_diff" ; fi;
                if [[ $date_diff == 0 ]] ; then echo "cert will be expired in $date_diff do rolling restart"; for j in `kubectl  get deployments -n platform |grep {{ $root.Release.Name }}|cut -d " " -f 1`; do kubectl rollout restart deployment/$j -n platform;done; else echo "Kafka proxy certificate will expire in $date_diff days"; fi; 
              volumeMounts:
               - mountPath: /opt/tls
                 name: kafka-wildcard-cert 
                
{{- end }}
 
